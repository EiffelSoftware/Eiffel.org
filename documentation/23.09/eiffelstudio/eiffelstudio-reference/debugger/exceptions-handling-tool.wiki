[[Property:title|Exceptions handling tool]]
[[Property:weight|-7]]
[[Property:uuid|9a62611f-46ba-7d74-ba1c-989f6709074b]]
This Exceptions handling tool is used to specify whether the debugger stops or continues on specific exceptions.

To access this tool, follow the menu path:


<code lang=text>
Execution --> Exception handling</code>


{{note|Now that exceptions are objects in Eiffel, the mechanism is unified for classic and .NET systems, using the Eiffel exception class names. }}


==Tailoring exception handling behavior==

The image below shows the Exceptions handling tool.


[[Image:exceptions-handling-tool|Exception handling tool]] 


In the top two checkboxes, the tool provides a way to enable and disable "Catcall" warnings on the console or in the debugger.

If the "filter exceptions" checkbox is enabled, for each exception you can specify the exception action as one of:
* '''Disabled''' means that filtering for this exception is not enabled. Therefore, the default behavior of '''Catch''' applies.
* '''Catch''' means stop on such an exception. 
* '''Ignore''' means do not stop on such an exception.
You can double clicking an exception name to toggle its status between '''Ignore''' and '''Catch'''.

Clicking the button labeled ''Ignore External Exception?'' will set the status of a set of external exceptions to '''Ignore'''.

Click the button labeled ''Apply'' to apply your selections, or ''Reset'' to reset the tool to its default values.


{{tip|Using the "Pattern" field, you can add your own filters using regular expression.}}







