[[Property:title|Rename Class]]
[[Property:weight|3]]
[[Property:uuid|e70f2760-389a-4c54-ed10-b731dc70e952]]
# Start the '''Rename''' refactoring action by either:
## Selecting '''Refactor->Rename''' from the context menu associated with the class you want to rename.
## Picking the class and dropping its pebble into the '''Rename''' hole ([[Image:refactor-rename-icon]]) on the [[Main toolbars|refactoring toolbar]].
# After a compilation the '''Refactoring: Class Rename''' dialog appears. You can enter a new name. 
# You can choose between these options: 
#*  '''Compiled Classes''': only to the refactoring in compiled classes. 
#*  '''All Classes''': do the refactoring in all classes, even in uncompiled classes. 
#*  '''Rename File''': rename the file of the class to correspond with the class name, if another file with this name already exists the file will not be renamed and a warning will be given. 
#*  '''Replace Name in Comments''': replace usage of the class name in comments that follow the '''{CLASSNAME}''' syntax. 
#*  '''Replace Name in Strings''': replace usage of the class name in strings that follow the '''{CLASSNAME}''' syntax. 
#* '''Reuse existing name''': allow two or more classes to have the same name during refactoring (note: the compiler will still report an error, if there are two or more classes conflicting with same name, but this option could be use to merge two classes).
# Click '''OK'''. 

