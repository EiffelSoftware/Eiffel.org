[[Property:title|EiffelBase, The Kernel]]
[[Property:weight|0]]
[[Property:uuid|A26C5BCA-20A5-4EE6-9710-F4E8B72DBA10]]
In addition to basic concepts close to the language level, the Kernel covers such common needs as '''input''' and '''output''', '''storage''' and '''retrieval''' of objects on persistent storage, fine control over '''exception handling''' and '''memory management''', and access to '''operating system facilities'''. The kernel can be divided into 5 logical clusters of classes: 
# The first cluster contains the universal class defining facilities accessible to all other classes: [[ref:libraries/base/reference/any_chart|ANY]] . Every developer-defined class is a descendant of this class. 
# The second cluster includes classes whose facilities are directly related to language concepts: 
** Classes describing the basic types: [[ref:libraries/base/reference/boolean_chart|BOOLEAN]] , [[ref:libraries/base/reference/character_8_chart|CHARACTER]] , [[ref:libraries/base/reference/integer_32_chart|INTEGER]] , [[ref:libraries/base/reference/real_32_chart|REAL]]  and [[ref:libraries/base/reference/real_64_chart|DOUBLE]] 
** Arrays: class [[ref:libraries/base/reference/array_chart|ARRAY]] 
** Tuples: class [[ref:libraries/base/reference/tuple_chart|TUPLE]]  
** Strings: class [[ref:libraries/base/reference/string_8_chart|STRING]] 
** Basic facilities: class [[ref:libraries/base/reference/basic_routines_chart|BASIC_ROUTINES]] 
# The third cluster provides input and output facilities: 
** [[ref:libraries/base/reference/std_files_chart|STD_FILES]]  offers basic mechanisms, sufficient for simple input and output.
** [[ref:libraries/base/reference/file_chart|FILE]]  describes the notion of sequential file, viewed as a sequence of characters and fully integrated in the data structure library.
** [[ref:libraries/base/reference/directory_chart|DIRECTORY]]  gives properties of directories (files serving as collections of other files).
# The next cluster, through class [[ref:libraries/base/reference/storable_chart|STORABLE]] , makes it possible to store object structures on persistent storage and retrieve them later. This facility can also be used to transmit object structures through pipes or over a network.
# The last cluster provides access to internal properties of the compiler and environment, useful for applications that need some fine-tuning of the basic mechanisms: 
** Class [[ref:libraries/base/reference/exceptions_chart|EXCEPTIONS]]  (complemented by [[ref:libraries/base/reference/unix_signals_chart|UNIX_SIGNALS]]  for Unix-type platforms) provides control over the exception handling mechanism, in particular for applications that need to handle different types of exception in different ways.
** Similarly, classes [[ref:libraries/base/reference/memory_chart|MEMORY]]  and [[ref:libraries/base/reference/gc_info_chart|GC_INFO]]  provide ways to control the garbage collector and tailor it to specific needs.
** Class ARGUMENTS gives access to the command-line arguments.
